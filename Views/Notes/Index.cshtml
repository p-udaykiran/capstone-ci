@model IEnumerable<NoteApp.Models.Note>
@{
    ViewData["Title"] = "All Notes";
}

<style>
    body {
        font-family: 'Segoe UI', sans-serif;
    }

    .all-notes-title {
        font-size: 2.4rem;
        font-weight: 700;
        color: #facc15;
        text-align: center;
        margin-bottom: 2rem;
        text-transform: uppercase;
    }

    .search-bar {
        max-width: 520px;
        margin: 0 auto 2rem;
    }

    .search-bar input {
        border-radius: 8px;
        border: 1px solid #444;
        background-color: #2e2e3e;
        color: #fff;
        padding: 0.65rem 1rem;
        transition: all 0.3s ease-in-out;
    }

    .search-bar input:focus {
        border-color: #facc15;
        box-shadow: 0 0 6px #facc15;
        outline: none;
    }

    .search-bar .input-group-text {
        background-color: #2e2e3e;
        color: #fff;
        border: 1px solid #444;
        border-right: none;
    }

    .note-card {
        background-color: #2a2a3b;
        color: #ffffff;
        border-radius: 16px;
        padding: 1.5rem;
        transition: all 0.4s ease-in-out;
        animation: fadeInUp 0.5s ease both;
        box-shadow: 0 6px 18px rgba(0, 0, 0, 0.4);
        transform-origin: center;
    }

    .note-card:hover {
        transform: translateY(-6px) scale(1.02);
        box-shadow: 0 0 25px #00ff99, 0 0 35px rgba(0, 255, 153, 0.3);
    }

    .note-title {
        font-size: 1.4rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .note-body {
        font-size: 0.95rem;
        color: #dddddd;
        line-height: 1.5;
        margin-bottom: 1rem;
    }

    .note-meta {
        font-size: 0.8rem;
        color: #bbbbbb;
        margin-bottom: 1rem;
    }

    .note-buttons {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .note-btn {
        padding: 8px 16px;
        font-size: 0.85rem;
        font-weight: 600;
        border-radius: 6px;
        text-transform: uppercase;
        text-decoration: none !important;
        border: 1px solid transparent;
        transition: all 0.3s ease-in-out;
        background-color: transparent;
    }

    .note-btn.view {
        color: #00d2ff;
        border: 1px solid #00d2ff;
    }

    .note-btn.edit {
        color: #facc15;
        border: 1px solid #facc15;
    }

    .note-btn.delete {
        color: #ff4b5c;
        border: 1px solid #ff4b5c;
    }

    .note-btn:hover {
        transform: scale(1.05);
    }

    .note-btn.view:hover {
        background-color: #00f0ff;
        color: #000;
        box-shadow: 0 0 12px #00f0ff;
    }

    .note-btn.edit:hover {
        background-color: #facc15;
        color: #000;
        box-shadow: 0 0 12px #facc15;
    }

    .note-btn.delete:hover {
        background-color: #ff1c1c;
        color: #fff;
        box-shadow: 0 0 12px #ff1c1c;
    }

    @@media (max-width: 767.98px) {
        .note-buttons {
            flex-direction: column;
        }

        .note-card {
            padding: 1.25rem;
        }
    }
</style>

<div class="container mt-5">
    <h2 class="all-notes-title">
        <i class="fas fa-folder-open"></i> All Notes
    </h2>

    <!-- Search Bar -->
    <div class="input-group search-bar">
        <span class="input-group-text"><i class="fas fa-search"></i></span>
        <input type="text" id="searchInput" class="form-control" placeholder="Search notes by title...">
    </div>

    <!-- Notes Grid -->
    <div class="row" id="notesContainer">
        @foreach (var note in Model)
        {
            <div class="col-lg-4 col-md-6 mb-4">
                <div class="note-card">
                    <div class="note-title">@note.Title</div>
                    <div class="note-body">@note.Content</div>
                    <div class="note-meta">
                        Created: @note.CreatedAt.ToString("dd MMM yyyy | hh:mm tt")
                    </div>
                    <div class="note-buttons">
                        <a asp-action="Details" asp-route-id="@note.Id" class="note-btn view">View</a>
                        <a asp-action="Edit" asp-route-id="@note.Id" class="note-btn edit">Edit</a>
                        <a asp-action="Delete" asp-route-id="@note.Id" class="note-btn delete">Delete</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        const searchInput = document.getElementById("searchInput");
        const noteCards = document.querySelectorAll(".note-card");

        searchInput.addEventListener("keyup", function () {
            const term = this.value.toLowerCase();
            noteCards.forEach(note => {
                const title = note.querySelector(".note-title").innerText.toLowerCase();
                note.parentElement.style.display = title.includes(term) ? "block" : "none";
            });
        });
    </script>
}
